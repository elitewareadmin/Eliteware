---
---

<div class="custom-cursor hidden md:block">
  <div class="cursor-dot"></div>
  <div class="cursor-circle"></div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const cursorDot = document.querySelector('.cursor-dot');
    const cursorCircle = document.querySelector('.cursor-circle');
    
    if (!cursorDot || !cursorCircle) return;
    
    let mouseX = 0;
    let mouseY = 0;
    let dotX = 0;
    let dotY = 0;
    let circleX = 0;
    let circleY = 0;
    
    // Add class to body to hide default cursor
    document.body.classList.add('hide-cursor');
    
    document.addEventListener('mousemove', (e) => {
      mouseX = e.clientX;
      mouseY = e.clientY;
    });
    
    const updateCursor = () => {
      // Smooth movement for dot
      dotX += (mouseX - dotX) * 1;
      dotY += (mouseY - dotY) * 1;
      
      // More lag for circle
      circleX += (mouseX - circleX) * 0.3;
      circleY += (mouseY - circleY) * 0.3;
      
      if (cursorDot) {
        cursorDot.style.transform = `translate3d(${mouseX}px, ${mouseY}px, 0)`;
      }
      
      if (cursorCircle) {
        cursorCircle.style.transform = `translate3d(${circleX}px, ${circleY}px, 0)`;
      }
      
      requestAnimationFrame(updateCursor);
    };
    
    updateCursor();
    
    // Hover effects
    const handleMouseEnter = () => {
      if (cursorCircle) {
        cursorCircle.classList.add('cursor-hover');
      }
    };
    
    const handleMouseLeave = () => {
      if (cursorCircle) {
        cursorCircle.classList.remove('cursor-hover');
      }
    };
    
    // Add hover effect for all interactive elements
    const interactiveElements = document.querySelectorAll('a, button, input, textarea, select, [role="button"]');
    
    interactiveElements.forEach(el => {
      el.addEventListener('mouseenter', handleMouseEnter);
      el.addEventListener('mouseleave', handleMouseLeave);
    });
    
    return () => {
      document.body.classList.remove('hide-cursor');
      interactiveElements.forEach(el => {
        el.removeEventListener('mouseenter', handleMouseEnter);
        el.removeEventListener('mouseleave', handleMouseLeave);
      });
    };
  });
</script>

<style>
  .custom-cursor {
    pointer-events: none;
    position: fixed;
    z-index: 9999;
    mix-blend-mode: difference;
  }
  
  .cursor-dot {
    position: fixed;
    top: 0;
    left: 0;
    width: 8px;
    height: 8px;
    background-color: white;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 999;
  }
  
  .cursor-circle {
    position: fixed;
    top: 0;
    left: 0;
    width: var(--cursor-size);
    height: var(--cursor-size);
    border: 1px solid white;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s, opacity 0.3s;
    z-index: 998;
  }
  
  .cursor-hover {
    width: calc(var(--cursor-size) * 1.5);
    height: calc(var(--cursor-size) * 1.5);
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  @media (pointer: coarse) {
    .custom-cursor {
      display: none;
    }
  }
</style>